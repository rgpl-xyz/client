events {
    
}
http {
  include /etc/nginx/mime.types;

  map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        ~images/                   max;
        }

  server {
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
    add_header X-Frame-Options "deny" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
  #  add_header Content-Security-Policy "default-src 'self'; connect-src wss:; style-src 'self' 'unsafe-inline' 'unsafe-eval' *.googleapis.com cdn.jsdelivr.net; style-src-elem 'self' 'unsafe-inline' 'unsafe-eval' *.googleapis.com cdn.jsdelivr.net; script-src 'self' 'unsafe-inline' 'unsafe-eval' *.googleapis.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' *.googleapis.com; font-src 'self' fonts.gstatic.com cdn.jsdelivr.net; frame-src 'self'; object-src 'self'; img-src 'self' data:; " always;
    add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()" always;

    server_name localhost;

    listen 8080;
    ssl_certificate localhost.crt;
    ssl_certificate_key localhost.key;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 10m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;

    root /usr/share/nginx/html;

    location ^~ /sockjs-node/ {
      proxy_pass https://$server_name;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;

      proxy_http_version 1.1;
      proxy_cache_bypass $http_upgrade;
    }

    location /healthz {
      access_log off;
      default_type application/json;
      return 200 "{'healthy':true}";
    }

    location /readyz {
      access_log off;
      default_type application/json;
      return 200 "{'ready':true}";
    }

    gzip  on;
  }
}
